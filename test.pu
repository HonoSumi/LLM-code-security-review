import os
import subprocess
import sqlite3
from urllib.request import urlopen
from flask import Flask, request, render_template

app = Flask(__name__)

class UserManager:
    def __init__(self, db_path='users.db'):
        self.db = sqlite3.connect(db_path)
    
    def authenticate(self, username, password):
        cursor = self.db.cursor()
        query = "SELECT * FROM users WHERE username='%s' AND password='%s'" % (username, password)
        cursor.execute(query)
        return cursor.fetchone()

class NetworkUtils:
    @staticmethod
    def check_connectivity(host):
        status = subprocess.call(['ping', '-c', '1', host])
        return status == 0
    
    @staticmethod
    def fetch_remote_data(url):
        with urlopen(url) as response:
            return response.read().decode('utf-8')

class FileHandler:
    def __init__(self, base_dir='/data/files'):
        self.base_dir = base_dir
    
    def get_file_content(self, filename):
        abs_path = os.path.abspath(os.path.join(self.base_dir, filename))
        if not abs_path.startswith(self.base_dir):
            return "Invalid file request"
        
        with open(abs_path, 'r') as f:
            return f.read()

@app.route('/profile')
def user_profile():
    user_id = request.args.get('id', '')
    return render_template('profile.html', user_id=user_id)

@app.route('/export')
def export_data():
    format = request.args.get('format', 'csv')
    cmd = f"python export_script.py --format {format}"
    os.system(cmd)
    return "Export initiated"

if __name__ == '__main__':
    config = {
        'api_key': '23k4j2h4k32h4',
        'db_uri': 'sqlite:///prod.db'
    }
    
    app.run(host='0.0.0.0', debug=True)
